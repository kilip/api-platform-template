version: '3.4'
services:
  php:
    container_name: api_template.php
    image: ghcr.io/kilip/api-platform-template/php-dev
    build:
      context: ./
      target: api_template_php
      dockerfile: docker/Dockerfile
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - ./api:/srv/api:rw,cached
      - ./docker/php/conf.d/php.dev.ini:/usr/local/etc/php/conf.d/api_template.ini
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      APP_ENV: dev
      DATABASE_URL: 'postgresql://api_template:api_template@database:5432/api_template?serverVersion=13&charset=utf8'

  nginx:
    container_name: api_template.nginx
    image: nginx
    volumes:
      - php_socket:/var/run/php
      - ./api:/srv/api
      - ./docker/certs:/certs:ro
      - ./docker/nginx:/etc/nginx/conf.d
    depends_on:
      - php
    ports:
      - "80:80"
      - "443:443"

  pwa:
    image: ghcr.io/kilip/api-platform-template/pwa
    container_name: api_template.pwa
    build:
      context: ./
      dockerfile: ./docker/pwa/Dockerfile
    volumes:
      - ./pwa:/client
    ports:
      - "3000:3000"

  database:
    container_name: api_template.database
    image: postgres
    environment:
      - POSTGRES_DB=api_template
      - POSTGRES_PASSWORD=api_template
      - POSTGRES_USER=api_template
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data:rw
      - ./docker/postgres/entrypoint:/docker-entrypoint-init.db

volumes:
  php_socket:
  caddy_config:
  caddy_data:
  db_data:
